<UserControl x:Class="UserControls.General.Button"
			  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			  mc:Ignorable="d" 
			  d:DesignHeight="30" d:DesignWidth="100">
    
    <!--To reduce the Margin of the Image (To make the Button and Image smaller) use the ButtonPadding Property.
    For instance, see the SwiftERPWindowButtons User Control.-->

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedEventCommand, RelativeSource={RelativeSource Mode=FindAncestor,
                AncestorType={x:Type UserControl}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Framework;component/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}">

        <Button Command="{Binding ButtonCommand}" 
                CommandParameter="{Binding ButtonCommandParameter}"
                ToolTip="{Binding ButtonTooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Padding="{Binding ButtonPadding, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                x:Name="ButtonC"
                ToolTipOpening="ButtonC_ToolTipOpening"
                HorizontalContentAlignment="{Binding ButtonHorizontalContentAlignment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource ButtonRoundCorner}"
                FontSize="{Binding ButtonFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" 
                       x:Name="ImageInButton"
                       Source="{Binding ButtonImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Width="{Binding ImageWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Height="{Binding ImageHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Visibility="{Binding ImageVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Margin="{Binding ImageMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Left"/>

                <TextBlock Grid.Column="1" 
                           x:Name="ButtonText"
                           Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                           Margin="{Binding TextMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Visibility="{Binding TextVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalAlignment="Left"/>

            </Grid>
        </Button>
    </Grid>
</UserControl>
